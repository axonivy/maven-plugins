package ch.ivyteam.db.meta.generator.internal;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * A helper class producing a HashMap with reserved SQL keywords
 * @author Urs-Martin
 * @version 11.6.2001
 */
public class ReservedSqlKeywords {

  /** The reserved keywords */
  private static Set<String> reservedKeywords;

  /** No instances of this class */
  private ReservedSqlKeywords() {}

  static {
    Set<String> reserved = new HashSet<>(1000);
    reserved.add("ABSOLUTE");
    reserved.add("ACTION");
    reserved.add("ACTOR");
    reserved.add("ADD");
    reserved.add("AFTER");
    reserved.add("AFTER");
    reserved.add("ALL");
    reserved.add("ALIAS");
    reserved.add("ALLOCATE");
    reserved.add("ALTER");
    reserved.add("AND");
    reserved.add("ANY");
    reserved.add("ARE");
    reserved.add("ASSERTION");
    reserved.add("AS");
    reserved.add("ASC");
    reserved.add("ASYNC");
    reserved.add("ASSERTION");
    reserved.add("AT");
    reserved.add("ATTRIBUTES");
    reserved.add("AUTORIZATION");
    reserved.add("AVG");
    reserved.add("BEGIN");
    reserved.add("BEFORE");
    reserved.add("BETWEEN");
    reserved.add("BIT");
    reserved.add("BIT_LENGTH");
    reserved.add("BOOLEAN");
    reserved.add("BOTH");
    reserved.add("BREADTH");
    reserved.add("BY");
    reserved.add("CALL");
    reserved.add("CASCADE");
    reserved.add("CASCADED");
    reserved.add("CASE");
    reserved.add("CAST");
    reserved.add("CATALOG");
    reserved.add("CHAR");
    reserved.add("CHARACTER");
    reserved.add("CHARACTER_LENGTH");
    reserved.add("CHAR_LENGTH");
    reserved.add("CHECK");
    reserved.add("CLOSE");
    reserved.add("COALESCE");
    reserved.add("COLLATE");
    reserved.add("COLLATION");
    reserved.add("COLUMN");
    reserved.add("COMMIT");
    reserved.add("COMPLETION");
    reserved.add("CONNECT");
    reserved.add("CONNECTION");
    reserved.add("CONSTRAINT");
    reserved.add("CONSTRAINTS");
    reserved.add("CONTINUE");
    reserved.add("CONVERT");
    reserved.add("CORRESPONDING");
    reserved.add("COUNT");
    reserved.add("CREATE");
    reserved.add("CROSS");
    reserved.add("CURRENT");
    reserved.add("CURRENT_DATE");
    reserved.add("CURRENT_PATH");
    reserved.add("CURRENT_TIME");
    reserved.add("CURRENT_TIMESTAMP");
    reserved.add("CURRENT_USER");
    reserved.add("CURSOR");
    reserved.add("CYCLE");
    reserved.add("DATA");
    reserved.add("DATE");
    reserved.add("DAY");
    reserved.add("DEALLOCATE");
    reserved.add("DEC");
    reserved.add("DECIMAL");
    reserved.add("DECLARE");
    reserved.add("DEFAULT");
    reserved.add("DEFERRABLE");
    reserved.add("DEFERRED");
    reserved.add("DELETE");
    reserved.add("DESC");
    reserved.add("DEPTH");
    reserved.add("DESCRIBE");
    reserved.add("DESCRIPTOR");
    reserved.add("DESTROY");
    reserved.add("DIAGNOSTICS");
    reserved.add("DICTIONARY");
    reserved.add("DICTIONARY");
    reserved.add("DISCONNECT");
    reserved.add("DISTINCT");
    reserved.add("DO");
    reserved.add("DOMAIN");
    reserved.add("DOUBLE");
    reserved.add("DROP");
    reserved.add("EACH");
    reserved.add("ELEMENT");
    reserved.add("ELSE");
    reserved.add("ELSEIF");
    reserved.add("END");
    reserved.add("END-EXEC");
    reserved.add("EQUALS");
    reserved.add("ESCAPE");
    reserved.add("EXCEPT");
    reserved.add("EXCEPTION");
    reserved.add("EXEC");
    reserved.add("EXECUTE");
    reserved.add("EXEISTS");
    reserved.add("EXTERNAL");
    reserved.add("EXTRACT");
    reserved.add("FACTOR");
    reserved.add("FALSE");
    reserved.add("FETCH");
    reserved.add("FIRST");
    reserved.add("FLOAT");
    reserved.add("FOR");
    reserved.add("FOREIGN");
    reserved.add("FOUND");
    reserved.add("FROM");
    reserved.add("FULL");
    reserved.add("GENERAL");
    reserved.add("GET");
    reserved.add("GLOBAL");
    reserved.add("GO");
    reserved.add("GOTO");
    reserved.add("GRANT");
    reserved.add("GROUP");
    reserved.add("HAVING");
    reserved.add("HOLD");
    reserved.add("HOUR");
    reserved.add("IDENTITY");
    reserved.add("IF");
    reserved.add("IGNORE");
    reserved.add("IMMEDIATE");
    reserved.add("IN");
    reserved.add("INDICATOR");
    reserved.add("INITIALLY");
    reserved.add("INNER");
    reserved.add("INPUT");
    reserved.add("INSENSITIVE");
    reserved.add("INITIALLY");
    reserved.add("INSERT");
    reserved.add("INTERSECT");
    reserved.add("INT");
    reserved.add("INTEGER");
    reserved.add("INTERSECT");
    reserved.add("INTERVAL");
    reserved.add("INTO");
    reserved.add("IS");
    reserved.add("ISOLATION");
    reserved.add("JOIN");
    reserved.add("LANGUAGE");
    reserved.add("LAST");
    reserved.add("LEADING");
    reserved.add("LEAVE");
    reserved.add("LEFT");
    reserved.add("LESS");
    reserved.add("LEVEL");
    reserved.add("LIMIT");
    reserved.add("LIKE");
    reserved.add("LIMIT");
    reserved.add("LIST");
    reserved.add("LOCAL");
    reserved.add("LOOP");
    reserved.add("LOWER");
    reserved.add("MATCH");
    reserved.add("MAX");
    reserved.add("MESSAGE");
    reserved.add("MIN");
    reserved.add("MINUTE");
    reserved.add("MODIFY");
    reserved.add("MODULE");
    reserved.add("MONTH");
    reserved.add("NAMES");
    reserved.add("NATIONAL");
    reserved.add("NATURAL");
    reserved.add("NCHAR");
    reserved.add("NEW");
    reserved.add("NEW_TABLE");
    reserved.add("NEXT");
    reserved.add("NO");
    reserved.add("NONE");
    reserved.add("NOT");
    reserved.add("NULL");
    reserved.add("NULLIF");
    reserved.add("NUMERIC");
    reserved.add("OBJECT");
    reserved.add("OCTET_LENGTH");
    reserved.add("OF");
    reserved.add("OFF");
    reserved.add("OID");
    reserved.add("OLD");
    reserved.add("OLD_TABLE");
    reserved.add("ON");
    reserved.add("ONLY");
    reserved.add("OPEN");
    reserved.add("OPERATION");
    reserved.add("OPERATOR");
    reserved.add("OPERATORS");
    reserved.add("OPTION");
    reserved.add("OR");
    reserved.add("ORDER");
    reserved.add("OTHERS");
    reserved.add("OUTER");
    reserved.add("OUTPUT");
    reserved.add("OVERLAPS");
    reserved.add("PAD");
    reserved.add("PARAMETERS");
    reserved.add("PARTIAL");
    reserved.add("PATH");
    reserved.add("PENDANT");
    reserved.add("POSITION");
    reserved.add("POSTFIX");
    reserved.add("PRECISION");
    reserved.add("PREFIX");
    reserved.add("PREORDER");
    reserved.add("PREPARE");
    reserved.add("PRESERVE");
    reserved.add("PRIMARY");
    reserved.add("PRIOR");
    reserved.add("PRIVATE");
    reserved.add("PRIVILAGE");
    reserved.add("PROCEDURE");
    reserved.add("PUBLIC");
    reserved.add("PROTECTED");
    reserved.add("READ");
    reserved.add("REAL");
    reserved.add("RECURSIVE");
    reserved.add("REF");
    reserved.add("REFERENCING");
    reserved.add("RELATIVE");
    reserved.add("REPLACE");
    reserved.add("RESIGNAL");
    reserved.add("RESTRICT");
    reserved.add("RETURN");
    reserved.add("RETURNS");
    reserved.add("REVOKE");
    reserved.add("RIGHT");
    reserved.add("ROLE");
    reserved.add("ROLLBACK");
    reserved.add("ROUTINE");
    reserved.add("ROW");
    reserved.add("ROWS");
    reserved.add("SAVEPOINT");
    reserved.add("SCHEMA");
    reserved.add("SCROLL");
    reserved.add("SEARCH");
    reserved.add("SECOND");
    reserved.add("SECTION");
    reserved.add("SELECT");
    reserved.add("SENSITIVE");
    reserved.add("SEQUENCE");
    reserved.add("SESSION");
    reserved.add("SESSION_USER");
    reserved.add("SET");
    reserved.add("SIGNAL");
    reserved.add("SIMILAR");
    reserved.add("SIZE");
    reserved.add("SMALLINT");
    reserved.add("SPACE");
    reserved.add("SOME");
    reserved.add("SQL");
    reserved.add("SQLCODE");
    reserved.add("SQLERROR");
    reserved.add("SQLEXCEPTION");
    reserved.add("SQLSTATE");
    reserved.add("SQLWARNING");
    reserved.add("START");
    reserved.add("STATE");
    reserved.add("STRUCTURE");
    reserved.add("SUBSTRING");
    reserved.add("SUM");
    reserved.add("SYMBOL");
    reserved.add("SYSTEM_USER");
    reserved.add("TABLE");
    reserved.add("TEMPORARY");
    reserved.add("TERM");
    reserved.add("TEST");
    reserved.add("THEN");
    reserved.add("THERE");
    reserved.add("TIME");
    reserved.add("TIMESTAMP");
    reserved.add("TIMEZONE_HOUR");
    reserved.add("TIMEZONE_MINUTE");
    reserved.add("TO");
    reserved.add("TRAILING");
    reserved.add("TRANSACTION");
    reserved.add("TRANSLATE");
    reserved.add("TRANSLATION");
    reserved.add("TRIGGER");
    reserved.add("TRIM");
    reserved.add("TRUE");
    reserved.add("TUPLE");
    reserved.add("TYPE");
    reserved.add("UNDER");
    reserved.add("UNION");
    reserved.add("UNIQUE");
    reserved.add("UNKNOWN");
    reserved.add("UPDATE");
    reserved.add("UPPER");
    reserved.add("USAGE");
    reserved.add("USER");
    reserved.add("USING");
    reserved.add("VALUE");
    reserved.add("VALUES");
    reserved.add("VARCHAR");
    reserved.add("VARIABLE");
    reserved.add("VARYING");
    reserved.add("VIEW");
    reserved.add("VIRTUAL");
    reserved.add("VISIBLE");
    reserved.add("WAIT");
    reserved.add("WHEN");
    reserved.add("WHENEVER");
    reserved.add("WHERE");
    reserved.add("WHILE");
    reserved.add("WITH");
    reserved.add("WITHOUT");
    reserved.add("WORK");
    reserved.add("WRITE");
    reserved.add("YEAR");
    reserved.add("ZONE");
    reservedKeywords = Collections.unmodifiableSet(reserved);
  }

  /**
   * Gets the reserved sql keywords
   * @return reserved sql keywords
   */
  public static Set<String> get() {
    return reservedKeywords;
  }
}
